name: "Ruby tests"

on:
  push:
    # Sequence of patterns matched against refs/heads
    branches:
      - "master"
  pull_request:

jobs:
  # Run older ruby versions under docker
  # Really old images run on the RSpec CI images (<3), slightly old ones use official ruby images
  test_docker:
    runs-on: "ubuntu-24.04"
    env:
      RAILS_ENV: "test"
      BUNDLE_GEMFILE: "${{ github.workspace }}/gemfiles/Gemfile.ruby-${{ matrix.ruby.version }}.rb"
    container: "${{ matrix.ruby.image || 'ruby' }}:${{ matrix.ruby.version }}"
    name: "RSpec on Ruby v${{ matrix.ruby.version }}"
    strategy:
      fail-fast: false
      matrix:
        ruby:
          - version: "1.8.7"
            image: "ghcr.io/rspec/docker-ci"
          - version: "1.9.3"
            image: "ghcr.io/rspec/docker-ci"
          - version: "2.0.0"
            image: "ghcr.io/rspec/docker-ci"
          - version: "2.1"
          - version: "2.2"

    steps:
      - name: "Clone project"
        uses: "actions/checkout@v1" # Anything newer than v1 causes a GLIBC/Node20 error
      - run: "bundle --jobs 8 --retry 3"
      - run: "bundle exec rake spec"

  # Run every other ruby natively without docker
  test:
    runs-on: "ubuntu-24.04"
    env:
      RAILS_ENV: "test"
      BUNDLE_GEMFILE: "${{ github.workspace }}/gemfiles/Gemfile.ruby-${{ matrix.ruby }}.rb"
    name: "RSpec on Ruby v${{ matrix.ruby }}"
    strategy:
      fail-fast: false
      matrix:
        ruby:
          - "2.3"
          - "2.4"
          - "2.5"
          - "2.6"
          - "2.7"
          - "3.0"
          - "3.1"
          - "3.2"
          - "3.3"
          - "3.4"

    steps:
      - name: "Clone project"
        uses: "actions/checkout@v3"
      - uses: "ruby/setup-ruby@v1"
        with:
          ruby-version: "${{ matrix.ruby }}"
          bundler-cache: false
      - run: "bundle --jobs 8 --retry 3"
      - run: "bundle exec rake spec"
